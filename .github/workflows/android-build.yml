name: Build Android APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            git \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            libjpeg-dev \
            zlib1g-dev \
            libncurses5-dev \
            libtool \
            pkg-config \
            automake \
            unzip \
            zip \
            openjdk-17-jdk \
            curl \
            wget

      - name: Install Android SDK Command-Line Tools
        run: |
          # Create the necessary directory for sdkmanager
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          
          # Download the command-line tools package
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
          
          # Unzip the downloaded package into the latest folder
          unzip commandlinetools-linux-7583922_latest.zip -d $HOME/android-sdk/cmdline-tools/
          
          # List the extracted files to ensure sdkmanager exists
          ls -l $HOME/android-sdk/cmdline-tools/latest
          
          # Add sdkmanager to the PATH in the current shell
          echo "export PATH=\$PATH:$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Verify SDK Manager Path and Files
        run: |
          # Check if sdkmanager is in the PATH
          echo "PATH: $PATH"
          which sdkmanager
          
          # List contents of the bin directory where sdkmanager should be
          ls -l $HOME/android-sdk/cmdline-tools/latest/bin

      - name: Accept Android SDK licenses
        run: |
          # Accept licenses by running sdkmanager
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Android SDK components (AIDL and Build Tools)
        run: |
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;30.0.3" "platform-tools" "platforms;android-30"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython virtualenv
          pip install buildozer

      - name: Create buildozer.spec if missing
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Force Rebuild python-for-android (p4a)
        run: |
          rm -rf ~/.buildozer/android/platform/python-for-android
          buildozer android update

      - name: Build APK
        run: |
          buildozer android clean
          buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4.6
        with:
          name: kivy-app-apk
          path: bin/*.apk
