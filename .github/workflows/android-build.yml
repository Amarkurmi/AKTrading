name: Build Android APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            git \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            libjpeg-dev \
            zlib1g-dev \
            libncurses5-dev \
            libtool \
            pkg-config \
            automake \
            unzip \
            zip \
            openjdk-17-jdk \
            curl \
            wget

      - name: Install Android SDK and Build Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools

          # Download and unzip SDK command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          # Update environment variables to include SDK paths
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools" >> $GITHUB_PATH

          # Accept licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

          # Install platform-tools, build-tools, and required SDK components
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-30" \
            "build-tools;30.0.3"

          # Verifying AIDL installation after installation
          echo "Verifying AIDL installation..."
          find $HOME/android-sdk/build-tools -name "aidl" -print

          # Log the list of installed SDK tools
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --list

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Cython virtualenv
          pip install buildozer

      - name: Create buildozer.spec if missing
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Clean buildozer environment (force rebuild)
        run: |
          rm -rf .buildozer
          rm -rf ~/.buildozer
          buildozer android clean || true  # tolerate errors here

      - name: Debugging - Check AIDL Installation
        run: |
          echo "Listing build-tools folder..."
          ls -la $HOME/android-sdk/build-tools || true

          # Check if the aidl tool exists
          if ! which aidl; then
            echo "❌ AIDL NOT FOUND. Attempting to locate aidl..."
            find $HOME/android-sdk/build-tools -name "aidl" -print || true
          else
            echo "✅ AIDL found at $(which aidl)"
          fi

      - name: Build APK
        run: |
          buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4.6
        with:
          name: kivy-app-apk
          path: bin/*.apk
